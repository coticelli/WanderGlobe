// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WanderGlobe.Data;

#nullable disable

namespace WanderGlobe.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250511203750_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("WanderGlobe.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("TEXT");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("WanderGlobe.Models.Badge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Criteria")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Badges");
                });

            modelBuilder.Entity("WanderGlobe.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CountryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCapital")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double?>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            IsCapital = true,
                            Latitude = 41.902799999999999,
                            Longitude = 12.4964,
                            Name = "Roma"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 2,
                            IsCapital = true,
                            Latitude = 48.8566,
                            Longitude = 2.3521999999999998,
                            Name = "Parigi"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 3,
                            IsCapital = true,
                            Latitude = 38.907200000000003,
                            Longitude = -77.036900000000003,
                            Name = "Washington D.C."
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 4,
                            IsCapital = true,
                            Latitude = 52.520000000000003,
                            Longitude = 13.404999999999999,
                            Name = "Berlino"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 5,
                            IsCapital = true,
                            Latitude = 40.416800000000002,
                            Longitude = -3.7038000000000002,
                            Name = "Madrid"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 6,
                            IsCapital = true,
                            Latitude = 38.722299999999997,
                            Longitude = -9.1393000000000004,
                            Name = "Lisbona"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 7,
                            IsCapital = true,
                            Latitude = 46.948,
                            Longitude = 7.4474,
                            Name = "Berna"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 8,
                            IsCapital = true,
                            Latitude = 48.208199999999998,
                            Longitude = 16.373799999999999,
                            Name = "Vienna"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 9,
                            IsCapital = true,
                            Latitude = 50.850299999999997,
                            Longitude = 4.3517000000000001,
                            Name = "Bruxelles"
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 10,
                            IsCapital = true,
                            Latitude = 52.367600000000003,
                            Longitude = 4.9040999999999997,
                            Name = "Amsterdam"
                        },
                        new
                        {
                            Id = 11,
                            CountryId = 11,
                            IsCapital = true,
                            Latitude = 51.507399999999997,
                            Longitude = -0.1278,
                            Name = "Londra"
                        },
                        new
                        {
                            Id = 12,
                            CountryId = 12,
                            IsCapital = true,
                            Latitude = 45.421500000000002,
                            Longitude = -75.697199999999995,
                            Name = "Ottawa"
                        },
                        new
                        {
                            Id = 13,
                            CountryId = 13,
                            IsCapital = true,
                            Latitude = 35.676200000000001,
                            Longitude = 139.65029999999999,
                            Name = "Tokyo"
                        },
                        new
                        {
                            Id = 14,
                            CountryId = 14,
                            IsCapital = true,
                            Latitude = 39.904200000000003,
                            Longitude = 116.4074,
                            Name = "Pechino"
                        },
                        new
                        {
                            Id = 15,
                            CountryId = 15,
                            IsCapital = true,
                            Latitude = -35.280900000000003,
                            Longitude = 149.13,
                            Name = "Canberra"
                        },
                        new
                        {
                            Id = 16,
                            CountryId = 16,
                            IsCapital = true,
                            Latitude = 55.755800000000001,
                            Longitude = 37.6173,
                            Name = "Mosca"
                        },
                        new
                        {
                            Id = 17,
                            CountryId = 17,
                            IsCapital = true,
                            Latitude = -15.780099999999999,
                            Longitude = -47.929200000000002,
                            Name = "Brasilia"
                        },
                        new
                        {
                            Id = 18,
                            CountryId = 18,
                            IsCapital = true,
                            Latitude = 28.613900000000001,
                            Longitude = 77.209000000000003,
                            Name = "Nuova Delhi"
                        },
                        new
                        {
                            Id = 19,
                            CountryId = 19,
                            IsCapital = true,
                            Latitude = -25.746099999999998,
                            Longitude = 28.188099999999999,
                            Name = "Pretoria"
                        },
                        new
                        {
                            Id = 20,
                            CountryId = 20,
                            IsCapital = true,
                            Latitude = 19.432600000000001,
                            Longitude = -99.133200000000002,
                            Name = "Città del Messico"
                        },
                        new
                        {
                            Id = 21,
                            CountryId = 21,
                            IsCapital = true,
                            Latitude = -34.603700000000003,
                            Longitude = -58.381599999999999,
                            Name = "Buenos Aires"
                        },
                        new
                        {
                            Id = 22,
                            CountryId = 22,
                            IsCapital = true,
                            Latitude = 37.983800000000002,
                            Longitude = 23.727499999999999,
                            Name = "Atene"
                        },
                        new
                        {
                            Id = 23,
                            CountryId = 23,
                            IsCapital = true,
                            Latitude = 30.0444,
                            Longitude = 31.235700000000001,
                            Name = "Il Cairo"
                        },
                        new
                        {
                            Id = 24,
                            CountryId = 24,
                            IsCapital = true,
                            Latitude = 59.329300000000003,
                            Longitude = 18.0686,
                            Name = "Stoccolma"
                        },
                        new
                        {
                            Id = 25,
                            CountryId = 25,
                            IsCapital = true,
                            Latitude = 59.913899999999998,
                            Longitude = 10.7522,
                            Name = "Oslo"
                        },
                        new
                        {
                            Id = 26,
                            CountryId = 26,
                            IsCapital = true,
                            Latitude = 55.676099999999998,
                            Longitude = 12.568300000000001,
                            Name = "Copenhagen"
                        },
                        new
                        {
                            Id = 27,
                            CountryId = 27,
                            IsCapital = true,
                            Latitude = 60.169899999999998,
                            Longitude = 24.938400000000001,
                            Name = "Helsinki"
                        },
                        new
                        {
                            Id = 28,
                            CountryId = 28,
                            IsCapital = true,
                            Latitude = 53.349800000000002,
                            Longitude = -6.2603,
                            Name = "Dublino"
                        },
                        new
                        {
                            Id = 29,
                            CountryId = 29,
                            IsCapital = true,
                            Latitude = -41.286499999999997,
                            Longitude = 174.77619999999999,
                            Name = "Wellington"
                        },
                        new
                        {
                            Id = 30,
                            CountryId = 30,
                            IsCapital = true,
                            Latitude = 1.3521000000000001,
                            Longitude = 103.8198,
                            Name = "Singapore"
                        },
                        new
                        {
                            Id = 31,
                            CountryId = 31,
                            IsCapital = true,
                            Latitude = 13.7563,
                            Longitude = 100.5018,
                            Name = "Bangkok"
                        },
                        new
                        {
                            Id = 32,
                            CountryId = 32,
                            IsCapital = true,
                            Latitude = 21.027799999999999,
                            Longitude = 105.8342,
                            Name = "Hanoi"
                        },
                        new
                        {
                            Id = 33,
                            CountryId = 33,
                            IsCapital = true,
                            Latitude = -6.2088000000000001,
                            Longitude = 106.8456,
                            Name = "Jakarta"
                        },
                        new
                        {
                            Id = 34,
                            CountryId = 34,
                            IsCapital = true,
                            Latitude = 3.1389999999999998,
                            Longitude = 101.68689999999999,
                            Name = "Kuala Lumpur"
                        },
                        new
                        {
                            Id = 35,
                            CountryId = 35,
                            IsCapital = true,
                            Latitude = 39.933399999999999,
                            Longitude = 32.859699999999997,
                            Name = "Ankara"
                        },
                        new
                        {
                            Id = 36,
                            CountryId = 1,
                            IsCapital = false,
                            Latitude = 45.464199999999998,
                            Longitude = 9.1899999999999995,
                            Name = "Milano"
                        },
                        new
                        {
                            Id = 37,
                            CountryId = 1,
                            IsCapital = false,
                            Latitude = 40.851799999999997,
                            Longitude = 14.2681,
                            Name = "Napoli"
                        },
                        new
                        {
                            Id = 38,
                            CountryId = 1,
                            IsCapital = false,
                            Latitude = 43.769599999999997,
                            Longitude = 11.255800000000001,
                            Name = "Firenze"
                        },
                        new
                        {
                            Id = 39,
                            CountryId = 1,
                            IsCapital = false,
                            Latitude = 45.440800000000003,
                            Longitude = 12.3155,
                            Name = "Venezia"
                        },
                        new
                        {
                            Id = 40,
                            CountryId = 1,
                            IsCapital = false,
                            Latitude = 44.494900000000001,
                            Longitude = 11.342599999999999,
                            Name = "Bologna"
                        },
                        new
                        {
                            Id = 41,
                            CountryId = 1,
                            IsCapital = false,
                            Latitude = 45.070300000000003,
                            Longitude = 7.6868999999999996,
                            Name = "Torino"
                        },
                        new
                        {
                            Id = 42,
                            CountryId = 1,
                            IsCapital = false,
                            Latitude = 38.115699999999997,
                            Longitude = 13.361499999999999,
                            Name = "Palermo"
                        },
                        new
                        {
                            Id = 43,
                            CountryId = 2,
                            IsCapital = false,
                            Latitude = 43.296500000000002,
                            Longitude = 5.3697999999999997,
                            Name = "Marsiglia"
                        },
                        new
                        {
                            Id = 44,
                            CountryId = 2,
                            IsCapital = false,
                            Latitude = 45.764000000000003,
                            Longitude = 4.8357000000000001,
                            Name = "Lione"
                        },
                        new
                        {
                            Id = 45,
                            CountryId = 2,
                            IsCapital = false,
                            Latitude = 43.7102,
                            Longitude = 7.2619999999999996,
                            Name = "Nizza"
                        },
                        new
                        {
                            Id = 46,
                            CountryId = 2,
                            IsCapital = false,
                            Latitude = 44.837800000000001,
                            Longitude = -0.57920000000000005,
                            Name = "Bordeaux"
                        },
                        new
                        {
                            Id = 47,
                            CountryId = 2,
                            IsCapital = false,
                            Latitude = 43.604700000000001,
                            Longitude = 1.4441999999999999,
                            Name = "Tolosa"
                        },
                        new
                        {
                            Id = 48,
                            CountryId = 2,
                            IsCapital = false,
                            Latitude = 48.573399999999999,
                            Longitude = 7.7521000000000004,
                            Name = "Strasburgo"
                        },
                        new
                        {
                            Id = 49,
                            CountryId = 3,
                            IsCapital = false,
                            Latitude = 40.712800000000001,
                            Longitude = -74.006,
                            Name = "New York"
                        },
                        new
                        {
                            Id = 50,
                            CountryId = 3,
                            IsCapital = false,
                            Latitude = 34.052199999999999,
                            Longitude = -118.2437,
                            Name = "Los Angeles"
                        },
                        new
                        {
                            Id = 51,
                            CountryId = 3,
                            IsCapital = false,
                            Latitude = 41.878100000000003,
                            Longitude = -87.629800000000003,
                            Name = "Chicago"
                        },
                        new
                        {
                            Id = 52,
                            CountryId = 3,
                            IsCapital = false,
                            Latitude = 25.761700000000001,
                            Longitude = -80.191800000000001,
                            Name = "Miami"
                        },
                        new
                        {
                            Id = 53,
                            CountryId = 3,
                            IsCapital = false,
                            Latitude = 37.774900000000002,
                            Longitude = -122.4194,
                            Name = "San Francisco"
                        },
                        new
                        {
                            Id = 54,
                            CountryId = 3,
                            IsCapital = false,
                            Latitude = 36.169899999999998,
                            Longitude = -115.13979999999999,
                            Name = "Las Vegas"
                        },
                        new
                        {
                            Id = 55,
                            CountryId = 3,
                            IsCapital = false,
                            Latitude = 42.360100000000003,
                            Longitude = -71.058899999999994,
                            Name = "Boston"
                        },
                        new
                        {
                            Id = 56,
                            CountryId = 4,
                            IsCapital = false,
                            Latitude = 48.135100000000001,
                            Longitude = 11.582000000000001,
                            Name = "Monaco"
                        },
                        new
                        {
                            Id = 57,
                            CountryId = 4,
                            IsCapital = false,
                            Latitude = 53.551099999999998,
                            Longitude = 9.9937000000000005,
                            Name = "Amburgo"
                        },
                        new
                        {
                            Id = 58,
                            CountryId = 4,
                            IsCapital = false,
                            Latitude = 50.110900000000001,
                            Longitude = 8.6821000000000002,
                            Name = "Francoforte"
                        },
                        new
                        {
                            Id = 59,
                            CountryId = 4,
                            IsCapital = false,
                            Latitude = 50.9375,
                            Longitude = 6.9603000000000002,
                            Name = "Colonia"
                        },
                        new
                        {
                            Id = 60,
                            CountryId = 4,
                            IsCapital = false,
                            Latitude = 51.227699999999999,
                            Longitude = 6.7735000000000003,
                            Name = "Düsseldorf"
                        },
                        new
                        {
                            Id = 61,
                            CountryId = 5,
                            IsCapital = false,
                            Latitude = 41.385100000000001,
                            Longitude = 2.1734,
                            Name = "Barcellona"
                        },
                        new
                        {
                            Id = 62,
                            CountryId = 5,
                            IsCapital = false,
                            Latitude = 39.469900000000003,
                            Longitude = -0.37630000000000002,
                            Name = "Valencia"
                        },
                        new
                        {
                            Id = 63,
                            CountryId = 5,
                            IsCapital = false,
                            Latitude = 37.389099999999999,
                            Longitude = -5.9844999999999997,
                            Name = "Siviglia"
                        },
                        new
                        {
                            Id = 64,
                            CountryId = 5,
                            IsCapital = false,
                            Latitude = 43.262999999999998,
                            Longitude = -2.9350000000000001,
                            Name = "Bilbao"
                        },
                        new
                        {
                            Id = 65,
                            CountryId = 5,
                            IsCapital = false,
                            Latitude = 36.721299999999999,
                            Longitude = -4.4212999999999996,
                            Name = "Malaga"
                        },
                        new
                        {
                            Id = 66,
                            CountryId = 11,
                            IsCapital = false,
                            Latitude = 53.480800000000002,
                            Longitude = -2.2425999999999999,
                            Name = "Manchester"
                        },
                        new
                        {
                            Id = 67,
                            CountryId = 11,
                            IsCapital = false,
                            Latitude = 52.486199999999997,
                            Longitude = -1.8904000000000001,
                            Name = "Birmingham"
                        },
                        new
                        {
                            Id = 68,
                            CountryId = 11,
                            IsCapital = false,
                            Latitude = 55.864199999999997,
                            Longitude = -4.2518000000000002,
                            Name = "Glasgow"
                        },
                        new
                        {
                            Id = 69,
                            CountryId = 11,
                            IsCapital = false,
                            Latitude = 53.4084,
                            Longitude = -2.9916,
                            Name = "Liverpool"
                        },
                        new
                        {
                            Id = 70,
                            CountryId = 11,
                            IsCapital = false,
                            Latitude = 55.953299999999999,
                            Longitude = -3.1882999999999999,
                            Name = "Edimburgo"
                        },
                        new
                        {
                            Id = 71,
                            CountryId = 12,
                            IsCapital = false,
                            Latitude = 43.653199999999998,
                            Longitude = -79.383200000000002,
                            Name = "Toronto"
                        },
                        new
                        {
                            Id = 72,
                            CountryId = 12,
                            IsCapital = false,
                            Latitude = 45.5017,
                            Longitude = -73.567300000000003,
                            Name = "Montreal"
                        },
                        new
                        {
                            Id = 73,
                            CountryId = 12,
                            IsCapital = false,
                            Latitude = 49.282699999999998,
                            Longitude = -123.1207,
                            Name = "Vancouver"
                        },
                        new
                        {
                            Id = 74,
                            CountryId = 12,
                            IsCapital = false,
                            Latitude = 51.044699999999999,
                            Longitude = -114.0719,
                            Name = "Calgary"
                        },
                        new
                        {
                            Id = 75,
                            CountryId = 13,
                            IsCapital = false,
                            Latitude = 34.6937,
                            Longitude = 135.50229999999999,
                            Name = "Osaka"
                        },
                        new
                        {
                            Id = 76,
                            CountryId = 13,
                            IsCapital = false,
                            Latitude = 35.011600000000001,
                            Longitude = 135.7681,
                            Name = "Kyoto"
                        },
                        new
                        {
                            Id = 77,
                            CountryId = 13,
                            IsCapital = false,
                            Latitude = 34.385300000000001,
                            Longitude = 132.45529999999999,
                            Name = "Hiroshima"
                        },
                        new
                        {
                            Id = 78,
                            CountryId = 13,
                            IsCapital = false,
                            Latitude = 35.1815,
                            Longitude = 136.9066,
                            Name = "Nagoya"
                        },
                        new
                        {
                            Id = 79,
                            CountryId = 15,
                            IsCapital = false,
                            Latitude = -33.8688,
                            Longitude = 151.20930000000001,
                            Name = "Sydney"
                        },
                        new
                        {
                            Id = 80,
                            CountryId = 15,
                            IsCapital = false,
                            Latitude = -37.813600000000001,
                            Longitude = 144.9631,
                            Name = "Melbourne"
                        },
                        new
                        {
                            Id = 81,
                            CountryId = 15,
                            IsCapital = false,
                            Latitude = -27.469799999999999,
                            Longitude = 153.02510000000001,
                            Name = "Brisbane"
                        },
                        new
                        {
                            Id = 82,
                            CountryId = 15,
                            IsCapital = false,
                            Latitude = -31.950500000000002,
                            Longitude = 115.8605,
                            Name = "Perth"
                        },
                        new
                        {
                            Id = 83,
                            CountryId = 17,
                            IsCapital = false,
                            Latitude = -22.9068,
                            Longitude = -43.172899999999998,
                            Name = "Rio de Janeiro"
                        },
                        new
                        {
                            Id = 84,
                            CountryId = 17,
                            IsCapital = false,
                            Latitude = -23.5505,
                            Longitude = -46.633299999999998,
                            Name = "São Paulo"
                        },
                        new
                        {
                            Id = 85,
                            CountryId = 17,
                            IsCapital = false,
                            Latitude = -12.971399999999999,
                            Longitude = -38.501399999999997,
                            Name = "Salvador"
                        },
                        new
                        {
                            Id = 86,
                            CountryId = 1,
                            IsCapital = false,
                            Latitude = 45.438400000000001,
                            Longitude = 10.9916,
                            Name = "Verona"
                        },
                        new
                        {
                            Id = 87,
                            CountryId = 1,
                            IsCapital = false,
                            Latitude = 44.4056,
                            Longitude = 8.9463000000000008,
                            Name = "Genova"
                        },
                        new
                        {
                            Id = 88,
                            CountryId = 35,
                            IsCapital = false,
                            Latitude = 41.008200000000002,
                            Longitude = 28.978400000000001,
                            Name = "Istanbul"
                        },
                        new
                        {
                            Id = 89,
                            CountryId = 35,
                            IsCapital = false,
                            Latitude = 36.896900000000002,
                            Longitude = 30.7133,
                            Name = "Antalya"
                        },
                        new
                        {
                            Id = 90,
                            CountryId = 35,
                            IsCapital = false,
                            Latitude = 38.423699999999997,
                            Longitude = 27.142800000000001,
                            Name = "Izmir"
                        },
                        new
                        {
                            Id = 91,
                            CountryId = 31,
                            IsCapital = false,
                            Latitude = 7.9519000000000002,
                            Longitude = 98.338099999999997,
                            Name = "Phuket"
                        },
                        new
                        {
                            Id = 92,
                            CountryId = 31,
                            IsCapital = false,
                            Latitude = 18.7883,
                            Longitude = 98.985299999999995,
                            Name = "Chiang Mai"
                        },
                        new
                        {
                            Id = 93,
                            CountryId = 31,
                            IsCapital = false,
                            Latitude = 12.9236,
                            Longitude = 100.8824,
                            Name = "Pattaya"
                        });
                });

            modelBuilder.Entity("WanderGlobe.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Continent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FlagUrl")
                        .HasColumnType("TEXT");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "IT",
                            Continent = "Europa",
                            Latitude = 41.902799999999999,
                            Longitude = 12.4964,
                            Name = "Italia"
                        },
                        new
                        {
                            Id = 2,
                            Code = "FR",
                            Continent = "Europa",
                            Latitude = 48.8566,
                            Longitude = 2.3521999999999998,
                            Name = "Francia"
                        },
                        new
                        {
                            Id = 3,
                            Code = "US",
                            Continent = "Nord America",
                            Latitude = 38.907200000000003,
                            Longitude = -77.036900000000003,
                            Name = "Stati Uniti"
                        },
                        new
                        {
                            Id = 4,
                            Code = "DE",
                            Continent = "Europa",
                            Latitude = 52.520000000000003,
                            Longitude = 13.404999999999999,
                            Name = "Germania"
                        },
                        new
                        {
                            Id = 5,
                            Code = "ES",
                            Continent = "Europa",
                            Latitude = 40.416800000000002,
                            Longitude = -3.7038000000000002,
                            Name = "Spagna"
                        },
                        new
                        {
                            Id = 6,
                            Code = "PT",
                            Continent = "Europa",
                            Latitude = 38.722299999999997,
                            Longitude = -9.1393000000000004,
                            Name = "Portogallo"
                        },
                        new
                        {
                            Id = 7,
                            Code = "CH",
                            Continent = "Europa",
                            Latitude = 46.948,
                            Longitude = 7.4474,
                            Name = "Svizzera"
                        },
                        new
                        {
                            Id = 8,
                            Code = "AT",
                            Continent = "Europa",
                            Latitude = 48.208199999999998,
                            Longitude = 16.373799999999999,
                            Name = "Austria"
                        },
                        new
                        {
                            Id = 9,
                            Code = "BE",
                            Continent = "Europa",
                            Latitude = 50.850299999999997,
                            Longitude = 4.3517000000000001,
                            Name = "Belgio"
                        },
                        new
                        {
                            Id = 10,
                            Code = "NL",
                            Continent = "Europa",
                            Latitude = 52.367600000000003,
                            Longitude = 4.9040999999999997,
                            Name = "Paesi Bassi"
                        },
                        new
                        {
                            Id = 11,
                            Code = "GB",
                            Continent = "Europa",
                            Latitude = 51.507399999999997,
                            Longitude = -0.1278,
                            Name = "Regno Unito"
                        },
                        new
                        {
                            Id = 12,
                            Code = "CA",
                            Continent = "Nord America",
                            Latitude = 45.421500000000002,
                            Longitude = -75.697199999999995,
                            Name = "Canada"
                        },
                        new
                        {
                            Id = 13,
                            Code = "JP",
                            Continent = "Asia",
                            Latitude = 35.676200000000001,
                            Longitude = 139.65029999999999,
                            Name = "Giappone"
                        },
                        new
                        {
                            Id = 14,
                            Code = "CN",
                            Continent = "Asia",
                            Latitude = 39.904200000000003,
                            Longitude = 116.4074,
                            Name = "Cina"
                        },
                        new
                        {
                            Id = 15,
                            Code = "AU",
                            Continent = "Oceania",
                            Latitude = -35.280900000000003,
                            Longitude = 149.13,
                            Name = "Australia"
                        },
                        new
                        {
                            Id = 16,
                            Code = "RU",
                            Continent = "Europa/Asia",
                            Latitude = 55.755800000000001,
                            Longitude = 37.6173,
                            Name = "Russia"
                        },
                        new
                        {
                            Id = 17,
                            Code = "BR",
                            Continent = "Sud America",
                            Latitude = -15.780099999999999,
                            Longitude = -47.929200000000002,
                            Name = "Brasile"
                        },
                        new
                        {
                            Id = 18,
                            Code = "IN",
                            Continent = "Asia",
                            Latitude = 28.613900000000001,
                            Longitude = 77.209000000000003,
                            Name = "India"
                        },
                        new
                        {
                            Id = 19,
                            Code = "ZA",
                            Continent = "Africa",
                            Latitude = -25.746099999999998,
                            Longitude = 28.188099999999999,
                            Name = "Sud Africa"
                        },
                        new
                        {
                            Id = 20,
                            Code = "MX",
                            Continent = "Nord America",
                            Latitude = 19.432600000000001,
                            Longitude = -99.133200000000002,
                            Name = "Messico"
                        },
                        new
                        {
                            Id = 21,
                            Code = "AR",
                            Continent = "Sud America",
                            Latitude = -34.603700000000003,
                            Longitude = -58.381599999999999,
                            Name = "Argentina"
                        },
                        new
                        {
                            Id = 22,
                            Code = "GR",
                            Continent = "Europa",
                            Latitude = 37.983800000000002,
                            Longitude = 23.727499999999999,
                            Name = "Grecia"
                        },
                        new
                        {
                            Id = 23,
                            Code = "EG",
                            Continent = "Africa",
                            Latitude = 30.0444,
                            Longitude = 31.235700000000001,
                            Name = "Egitto"
                        },
                        new
                        {
                            Id = 24,
                            Code = "SE",
                            Continent = "Europa",
                            Latitude = 59.329300000000003,
                            Longitude = 18.0686,
                            Name = "Svezia"
                        },
                        new
                        {
                            Id = 25,
                            Code = "NO",
                            Continent = "Europa",
                            Latitude = 59.913899999999998,
                            Longitude = 10.7522,
                            Name = "Norvegia"
                        },
                        new
                        {
                            Id = 26,
                            Code = "DK",
                            Continent = "Europa",
                            Latitude = 55.676099999999998,
                            Longitude = 12.568300000000001,
                            Name = "Danimarca"
                        },
                        new
                        {
                            Id = 27,
                            Code = "FI",
                            Continent = "Europa",
                            Latitude = 60.169899999999998,
                            Longitude = 24.938400000000001,
                            Name = "Finlandia"
                        },
                        new
                        {
                            Id = 28,
                            Code = "IE",
                            Continent = "Europa",
                            Latitude = 53.349800000000002,
                            Longitude = -6.2603,
                            Name = "Irlanda"
                        },
                        new
                        {
                            Id = 29,
                            Code = "NZ",
                            Continent = "Oceania",
                            Latitude = -41.286499999999997,
                            Longitude = 174.77619999999999,
                            Name = "Nuova Zelanda"
                        },
                        new
                        {
                            Id = 30,
                            Code = "SG",
                            Continent = "Asia",
                            Latitude = 1.3521000000000001,
                            Longitude = 103.8198,
                            Name = "Singapore"
                        },
                        new
                        {
                            Id = 31,
                            Code = "TH",
                            Continent = "Asia",
                            Latitude = 13.7563,
                            Longitude = 100.5018,
                            Name = "Thailandia"
                        },
                        new
                        {
                            Id = 32,
                            Code = "VN",
                            Continent = "Asia",
                            Latitude = 21.027799999999999,
                            Longitude = 105.8342,
                            Name = "Vietnam"
                        },
                        new
                        {
                            Id = 33,
                            Code = "ID",
                            Continent = "Asia",
                            Latitude = -6.2088000000000001,
                            Longitude = 106.8456,
                            Name = "Indonesia"
                        },
                        new
                        {
                            Id = 34,
                            Code = "MY",
                            Continent = "Asia",
                            Latitude = 3.1389999999999998,
                            Longitude = 101.68689999999999,
                            Name = "Malesia"
                        },
                        new
                        {
                            Id = 35,
                            Code = "TR",
                            Continent = "Europa/Asia",
                            Latitude = 39.933399999999999,
                            Longitude = 32.859699999999997,
                            Name = "Turchia"
                        });
                });

            modelBuilder.Entity("WanderGlobe.Models.Custom.ChecklistItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PlannedTripId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PlannedTripId");

                    b.ToTable("ChecklistItem");
                });

            modelBuilder.Entity("WanderGlobe.Models.Custom.DreamDestination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("DreamDestinations");
                });

            modelBuilder.Entity("WanderGlobe.Models.Custom.PlannedTrip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CompletionPercentage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PlannedTrips");
                });

            modelBuilder.Entity("WanderGlobe.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TravelJournalId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TravelJournalId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("WanderGlobe.Models.TravelJournal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CountryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("VisitDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("UserId");

                    b.ToTable("TravelJournals");
                });

            modelBuilder.Entity("WanderGlobe.Models.UserBadge", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<int>("BadgeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AchievedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "BadgeId");

                    b.HasIndex("BadgeId");

                    b.ToTable("UserBadges");
                });

            modelBuilder.Entity("WanderGlobe.Models.VisitedCountry", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<int>("CountryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("VisitDate")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "CountryId");

                    b.HasIndex("CountryId");

                    b.ToTable("VisitedCountries");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WanderGlobe.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WanderGlobe.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WanderGlobe.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WanderGlobe.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WanderGlobe.Models.City", b =>
                {
                    b.HasOne("WanderGlobe.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("WanderGlobe.Models.Custom.ChecklistItem", b =>
                {
                    b.HasOne("WanderGlobe.Models.Custom.PlannedTrip", null)
                        .WithMany("Checklist")
                        .HasForeignKey("PlannedTripId");
                });

            modelBuilder.Entity("WanderGlobe.Models.Custom.DreamDestination", b =>
                {
                    b.HasOne("WanderGlobe.Models.ApplicationUser", null)
                        .WithMany("DreamDestinations")
                        .HasForeignKey("ApplicationUserId");
                });

            modelBuilder.Entity("WanderGlobe.Models.Photo", b =>
                {
                    b.HasOne("WanderGlobe.Models.TravelJournal", "TravelJournal")
                        .WithMany("Photos")
                        .HasForeignKey("TravelJournalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TravelJournal");
                });

            modelBuilder.Entity("WanderGlobe.Models.TravelJournal", b =>
                {
                    b.HasOne("WanderGlobe.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WanderGlobe.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WanderGlobe.Models.UserBadge", b =>
                {
                    b.HasOne("WanderGlobe.Models.Badge", "Badge")
                        .WithMany("Users")
                        .HasForeignKey("BadgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WanderGlobe.Models.ApplicationUser", "User")
                        .WithMany("Badges")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Badge");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WanderGlobe.Models.VisitedCountry", b =>
                {
                    b.HasOne("WanderGlobe.Models.Country", "Country")
                        .WithMany("VisitedByUsers")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WanderGlobe.Models.ApplicationUser", "User")
                        .WithMany("VisitedCountries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WanderGlobe.Models.ApplicationUser", b =>
                {
                    b.Navigation("Badges");

                    b.Navigation("DreamDestinations");

                    b.Navigation("VisitedCountries");
                });

            modelBuilder.Entity("WanderGlobe.Models.Badge", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("WanderGlobe.Models.Country", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("VisitedByUsers");
                });

            modelBuilder.Entity("WanderGlobe.Models.Custom.PlannedTrip", b =>
                {
                    b.Navigation("Checklist");
                });

            modelBuilder.Entity("WanderGlobe.Models.TravelJournal", b =>
                {
                    b.Navigation("Photos");
                });
#pragma warning restore 612, 618
        }
    }
}
